@model SalesManagement.MVC.ViewModels.PedidoViewModel

@{
    ViewBag.Title = "Create Pedido";

    IEnumerable<ClienteViewModel> _clienteList = (IEnumerable<ClienteViewModel>)ViewData["Clientes"];
    IEnumerable<ProdutoViewModel> _produtoList = (IEnumerable<ProdutoViewModel>)ViewData["Produtos"];
}

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/v/bs/dt-1.10.18/datatables.min.css" />
<link rel="stylesheet" type="text/css" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <h4>Pedido de Vendas</h4>
    <hr />

    <input type="hidden" id="txtPedidoId" value="@Model.PedidoId" />

    <div class="row">
        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.ClienteId, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownList("ddCliente", new SelectList(_clienteList, "ClienteId", "Nome"), new { @class = "selectpicker" })
        </div>

        <div class="form-group col-md-3">
            @Html.LabelFor(model => model.DataPedido, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.DataPedido, new { htmlAttributes = new { @class = "form-control", @id = "txtDataPedido" } })
            @Html.ValidationMessageFor(model => model.DataPedido, "", new { @class = "text-danger" })
        </div>
    </div>

    <hr />

    <div class="row">

        <div class="form-group col-md-3">
            <label>Produto</label>
            @Html.DropDownList("ddProduto", new SelectList(_produtoList, "ProdutoId", "Descricao"), new { @class = "selectpicker" })
            <input type="hidden" id="txtDescricaoProduto" value="" />
        </div>

        <div class="form-group col-md-2">
            <label>Quantidade</label>
            <input type="number" id="txtQuantidade" value="" class="form-control" />
        </div>

        <div class="form-group col-md-2">
            <label>Preço Unitário</label>
            <input type="number" id="txtPrecoUnitario" value="" readonly disabled class="form-control" />
        </div>

        <div class="form-group col-md-2">
            <label>Valor Desconto</label>
            <input type="text" id="txtDesconto" value="0" class="form-control" />
        </div>

        <div class="form-group col-md-2">
            <label>Valor Total Item</label>
            <input type="number" id="txtValorTotal" value="" readonly disabled class="form-control" />
        </div>

        <div class="form-group col-md-2">
            <button id="#btnAdicionarProduto" type="button" onclick="atualizarProduto()" class="btn btn-success">Adicionar Produto</button>
        </div>
    </div>


    <div class="row">
        <table id="tableProdutos" class="table table-striped table-bordered" style="width:100%"></table>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Gravar Pedido" onclick="salvarPedido()" class="btn btn-info" />
        </div>
    </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    <script src="~/Scripts/jquery.dataTables.min.js"></script>

    <script>
        var table = undefined;
        var itensPedido = @Html.Raw(Json.Encode(Model.ItensPedido));
        var dadosProdutos = @Html.Raw(Json.Encode(_produtoList));

        var urlPostSave = '@Url.Action("Create", "Pedidos")';
        var urlIndex = '@Url.Action("Index", "Pedidos")';

        function atualizarProduto() {
            var codigoProduto = $("#ddProduto").selectpicker('val');
            var descricaoProduto = $("#txtDescricaoProduto").val();
            var quantidade = $("#txtQuantidade").val();
            var precoUnitario = $("#txtPrecoUnitario").val();
            var valorDesconto = $("#txtDesconto").val();
            var valorTotal = $("#txtValorTotal").val();

            if (codigoProduto == undefined)
            {
                alert('Selecione um produto');
                return false;
            }

            if (quantidade == undefined || quantidade <= 0)
            {
                alert('Informe uma quantidade');
                return false;
            }

            if (codigoProduto == undefined)
            {
                alert('Selecione um produto');
                return false;
            }

            if (table != undefined) {
                var exists = false;

                table.rows().data().each(function(val, i) {
                    console.log(val);
                    if (val[0] == codigoProduto)
                    {
                        exists = true;
                    }
                });

                if (!exists) {
                    table.row.add([codigoProduto, descricaoProduto, quantidade, precoUnitario, valorDesconto, valorTotal, ""]).draw(false);
                } else {
                    //update
                    //table.row.add([codigoProduto, descricaoProduto, quantidade, precoUnitario, valorDesconto, valorTotal, ""]).draw(false);
                }


            }
        }

        function getDadosProduto(produtoId) {
            var produto = undefined;

            $(dadosProdutos).each(function(i, val) {
                if (val.ProdutoId == produtoId)
                {
                    produto = val;
                }
            });

            return produto;
        }


        function selecionarItem() {
            var item = table.rows('.selected').data();

            if (item != undefined) {
                $("#ddProduto").selectpicker('val', item[0][0]);
                $("#txtQuantidade").val(item[0][2]);
                $("#txtPrecoUnitario").val(item[0][3]);
                $("#txtDesconto").val(item[0][4]);
                $("#txtValorTotal").val(item[0][5]);
            }
        }

        function onChangeItem() {
            var produto = getDadosProduto($("#ddProduto").selectpicker('val'));

            $("#txtPrecoUnitario").val(produto.Valor);
            $("#txtDescricaoProduto").val(produto.Descricao);

            if($("#txtQuantidade").val() == "")
            {
                $("#txtQuantidade").val(1);
            }

            var quantidade = $("#txtQuantidade").val();
            var precoUnitario = $("#txtPrecoUnitario").val();
            var valorDesconto = $("#txtDesconto").val();
            var valorTotal = (quantidade * precoUnitario) - valorDesconto;

            $("#txtValorTotal").val(valorTotal);
        }

        function salvarPedido() {
            if (table != undefined) {
                var data = table.rows().data();

                var pedidoModel = {
                    PedidoId : $("#txtPedidoId").val(),
                    DataPedido: $("#txtDataPedido").val(),
                    ClienteId: $("#ddCliente").val(),
                    ValorTotal: 0,
                    ItensPedido: [],
                };

                var itemPedido = {
                    ItemPedidoId: 0,
                    PedidoId: 0,
                    ProdutoId: 0,
                    Quantidade: 0,
                    PrecoUnitario: 0,
                    ValorDesconto: 0
                };

                //table.rows().data().each(function(val, i) {
                //    if (val[0] == codigoProduto)
                //    {
                //        exists = true;
                //    }
                //});

                $.ajax({
                    type: "POST",
                    url: urlPostSave,
                    data: pedidoModel,
                    success: function(x) {
                        bootbox.alert('Pedido criado com sucesso!', function() { 
                            window.location.replace(urlIndex);
                        });
                    },
                    fail : function(error) {
                        bootbox.alert('Ocorreu um erro: ' + error);
                    }
                });

            }
        }

        $(document).ready(function () {

            table = $('#tableProdutos').DataTable({
                data: itensPedido,
                columns: [
                    { title: "Produto" },
                    { title: "Descrição" },
                    { title: "Quantidade" },
                    { title: "Preço" },
                    { title: "Desconto" },
                    { title: "Total" },
                    { title: "Ação" }
                ]
            });

            $('#tableProdutos tbody').on('click', 'tr', function () {
                if ( $(this).hasClass('selected') ) {
                    $(this).removeClass('selected');
                }
                else {
                    table.$('tr.selected').removeClass('selected');
                    $(this).addClass('selected');
                    selecionarItem();
                }
            });

            $('#txtQuantidade').on('change', onChangeItem);
            $('#txtDesconto').on('change', onChangeItem);
            $('#ddProduto').on('change', onChangeItem);
        });


    </script>
}   